@page "/profile"
@using BlazingChat.ViewModels
@using BlazingChat.Shared.Models
@using System.Security.Claims
@inject IProfileViewModel _profileViewModel
@inject AuthenticationStateProvider _authenticationStateProvider

<h2><b>Profile</b></h2> 
<hr />

<div class="col-8">
    <input type="text" @bind-value="_profileViewModel.FirstName" class="form-control" placeholder="first name">
    <br/>
    <input type="text" @bind-value="_profileViewModel.LastName" class="form-control" placeholder="last name">
    <br/>
    <input type="text" @bind-value="_profileViewModel.EmailAddress" class="form-control" placeholder="email address">
    <br/>
    <textarea class="form-control" @bind="_profileViewModel.AboutMe" placeholder="about me"></textarea>
    <br/>
    <button class="btn btn-primary" @onclick="_profileViewModel.UpdateProfile">Update Profile</button>
    <span>&nbsp;&nbsp;</span>@_profileViewModel.Message
</div>


@code {
    protected override async Task OnInitializedAsync() 
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(user.Identity.IsAuthenticated)
        {
            var claim = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
            _profileViewModel.UserId = Convert.ToInt64(claim?.Value) ;
            await _profileViewModel.GetProfile();
        }
        else
        {

        }
        
    }
}